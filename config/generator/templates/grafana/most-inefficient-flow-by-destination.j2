from(bucket: "aggregated_data_export")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_measurement"] == "netflow")
  |> filter(fn: (r) => r["type_5053"] == "0" and r["type_5054"] == "0" and r["type_5055"] == "0" and r["type_5056"] == "0")
  |> filter(fn: (r) => r["type_5052"] == "0x01")
  |> filter(fn: (r) => r["_field"] == "type_5051" or r["_field"] == "in_packets")
  |> group(columns: ["flow_label"])
  |> pivot(rowKey: ["_time", "dst", "src"], columnKey: ["_field"], valueColumn: "_value")
  |> map(fn: (r) => ({ r with _value: r.type_5051 / r.in_packets }))
  |> drop(columns: ["type_5051", "in_packets", "_start", "_stop"])
  |> group(columns: ["dst"])
  |> sort(columns: ["_value"], desc: true)
  |> unique(column: "dst")
  |> group()

{% for host_name, host_details in hosts.items() %}
{% if loop.last %}
  |> map(fn: (r) => ({ r with src: if r.src == "{{ host_details.ipv6.ip }}" then "{{ host_name }}" else r.src }))
  |> map(fn: (r) => ({ r with dst: if r.dst == "{{ host_details.ipv6.ip }}" then "{{ host_name }}" else r.dst })){% else %}
  |> map(fn: (r) => ({ r with src: if r.src == "{{ host_details.ipv6.ip }}" then "{{ host_name }}" else r.src }))
  |> map(fn: (r) => ({ r with dst: if r.dst == "{{ host_details.ipv6.ip }}" then "{{ host_name }}" else r.dst }))

{% endif %}{% endfor %}