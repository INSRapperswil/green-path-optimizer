{
 "annotations": {
  "list": [
   {
    "builtIn": 1,
    "datasource": {
     "type": "grafana",
     "uid": "-- Grafana --"
    },
    "enable": true,
    "hide": true,
    "iconColor": "rgba(0, 211, 255, 1)",
    "name": "Annotations & Alerts",
    "type": "dashboard"
   }
  ]
 },
 "editable": true,
 "fiscalYearStartMonth": 0,
 "graphTooltip": 0,
 "id": 3,
 "links": [],
 "panels": [
  {
   "datasource": {
    "type": "influxdb",
    "uid": "P3C6603E967DC8568"
   },
   "fieldConfig": {
    "defaults": {
     "color": {
      "mode": "palette-classic"
     },
     "custom": {
      "axisBorderShow": false,
      "axisCenteredZero": false,
      "axisColorMode": "text",
      "axisLabel": "",
      "axisPlacement": "auto",
      "barAlignment": 0,
      "drawStyle": "line",
      "fillOpacity": 20,
      "gradientMode": "none",
      "hideFrom": {
       "legend": false,
       "tooltip": false,
       "viz": false
      },
      "insertNulls": false,
      "lineInterpolation": "smooth",
      "lineWidth": 3,
      "pointSize": 5,
      "scaleDistribution": {
       "type": "linear"
      },
      "showPoints": "auto",
      "spanNulls": false,
      "stacking": {
       "group": "A",
       "mode": "none"
      },
      "thresholdsStyle": {
       "mode": "off"
      }
     },
     "displayName": "Average path efficiency indicator",
     "mappings": [],
     "thresholds": {
      "mode": "absolute",
      "steps": [
       {
        "color": "green",
        "value": null
       },
       {
        "color": "red",
        "value": 80
       }
      ]
     }
    },
    "overrides": []
   },
   "gridPos": {
    "h": 8,
    "w": 12,
    "x": 0,
    "y": 0
   },
   "id": 2,
   "options": {
    "legend": {
     "calcs": [],
     "displayMode": "list",
     "placement": "bottom",
     "showLegend": true
    },
    "tooltip": {
     "mode": "single",
     "sort": "none"
    }
   },
   "targets": [
    {
     "datasource": {
      "type": "influxdb",
      "uid": "P3C6603E967DC8568"
     },
     "query": "from(bucket: \"raw_data_export\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"netflow\")\n  |> filter(fn: (r) => r[\"aggregator\"] == \"1\")\n  |> filter(fn: (r) => r[\"flags\"] == \"0\")\n  |> filter(fn: (r) => r[\"_field\"] == \"aggregate\")\n  |> group(columns: [\"flow_label\", \"src\"])\n  |> group()\n  |> aggregateWindow(every: 5m, fn: mean)",
     "refId": "A"
    }
   ],
   "title": "Network Path Efficiency (average over last 5 min)",
   "type": "timeseries"
  },
  {
   "datasource": {
    "type": "influxdb",
    "uid": "P3C6603E967DC8568"
   },
   "fieldConfig": {
    "defaults": {
     "color": {
      "mode": "palette-classic"
     },
     "custom": {
      "fillOpacity": 80,
      "gradientMode": "none",
      "hideFrom": {
       "legend": false,
       "tooltip": false,
       "viz": false
      },
      "lineWidth": 1
     },
     "displayName": "Number of paths in corresponding efficiency range",
     "mappings": [],
     "thresholds": {
      "mode": "absolute",
      "steps": [
       {
        "color": "green",
        "value": null
       },
       {
        "color": "red",
        "value": 80
       }
      ]
     }
    },
    "overrides": []
   },
   "gridPos": {
    "h": 8,
    "w": 12,
    "x": 12,
    "y": 0
   },
   "id": 4,
   "options": {
    "legend": {
     "calcs": [],
     "displayMode": "list",
     "placement": "bottom",
     "showLegend": true
    }
   },
   "targets": [
    {
     "datasource": {
      "type": "influxdb",
      "uid": "P3C6603E967DC8568"
     },
     "query": "from(bucket: \"raw_data_export\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"netflow\")\n  |> filter(fn: (r) => r[\"aggregator\"] == \"1\")\n  |> filter(fn: (r) => r[\"flags\"] == \"0\")\n  |> filter(fn: (r) => r[\"_field\"] == \"aggregate\")\n  |> group(columns: [\"flow_label\", \"src\"])\n  |> aggregateWindow(every: inf, fn: sum)\n  |> group()\n  |> filter(fn: (r) => r[\"_value\"] != 0)\n  |> unique(column: \"flow_label\")",
     "refId": "A"
    }
   ],
   "title": "PEI Distribution",
   "type": "histogram"
  },
  {
   "datasource": {
    "type": "influxdb",
    "uid": "P3C6603E967DC8568"
   },
   "fieldConfig": {
    "defaults": {
     "color": {
      "mode": "thresholds"
     },
     "custom": {
      "align": "auto",
      "cellOptions": {
       "type": "auto"
      },
      "filterable": true,
      "inspect": false
     },
     "mappings": [],
     "thresholds": {
      "mode": "absolute",
      "steps": [
       {
        "color": "green",
        "value": null
       },
       {
        "color": "red",
        "value": 80
       }
      ]
     }
    },
    "overrides": []
   },
   "gridPos": {
    "h": 9,
    "w": 12,
    "x": 0,
    "y": 8
   },
   "id": 5,
   "options": {
    "cellHeight": "sm",
    "footer": {
     "countRows": false,
     "fields": "",
     "reducer": [
      "sum"
     ],
     "show": false
    },
    "showHeader": true,
    "sortBy": []
   },
   "pluginVersion": "10.4.1",
   "targets": [
    {
     "datasource": {
      "type": "influxdb",
      "uid": "P3C6603E967DC8568"
     },
     "query": "from(bucket: \"raw_data_export\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"netflow\")\n  |> filter(fn: (r) => r[\"flags\"] == \"0\")\n  |> filter(fn: (r) => r[\"_field\"] == \"aggregate\")\n  |> group(columns: [\"source_ipv6\", \"destination_ipv6\"])\n  |> map(fn: (r) => ({ r with path: r.node_01 + \"-\" + r.node_02 + \"-\" + r.node_03 + \"-\" + r.node_04}))\n  |> keep(columns: [\"_time\", \"source_ipv6\", \"destination_ipv6\", \"path\", \"_value\"])\n  |> truncateTimeColumn(unit: 1s)\n  |> map(fn: (r) => ({ r with timestamp: r._time }))\n  |> aggregateWindow(every: inf, fn: last)\n  |> group()\n  |> filter(fn: (r) => r[\"_value\"] != 0)\n  |> drop(columns: [\"_time\", \"_start\", \"_stop\", \"_value\"])\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2a04:f340:0000:0000:0000:0000:0000:000a\" then \"h01\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2a04:f340:0000:0000:0000:0000:0000:000a\" then \"h01\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2a00:10c0:0000:0000:0000:0000:0000:000a\" then \"h02\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2a00:10c0:0000:0000:0000:0000:0000:000a\" then \"h02\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2001:067c:0470:0000:0000:0000:0000:000a\" then \"h03\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2001:067c:0470:0000:0000:0000:0000:000a\" then \"h03\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2a00:0c38:0000:0000:0000:0000:0000:000a\" then \"h04\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2a00:0c38:0000:0000:0000:0000:0000:000a\" then \"h04\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2a02:02d8:0000:0000:0000:0000:0000:000a\" then \"h05\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2a02:02d8:0000:0000:0000:0000:0000:000a\" then \"h05\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2607:5d00:0000:0000:0000:0000:0000:000a\" then \"h06\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2607:5d00:0000:0000:0000:0000:0000:000a\" then \"h06\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2a05:ff80:0000:0000:0000:0000:0000:000a\" then \"h07\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2a05:ff80:0000:0000:0000:0000:0000:000a\" then \"h07\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2a0a:de00:0000:0000:0000:0000:0000:000a\" then \"h08\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2a0a:de00:0000:0000:0000:0000:0000:000a\" then \"h08\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2001:0678:0274:0000:0000:0000:0000:000a\" then \"h09\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2001:0678:0274:0000:0000:0000:0000:000a\" then \"h09\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2001:0678:00e0:0000:0000:0000:0000:000a\" then \"h10\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2001:0678:00e0:0000:0000:0000:0000:000a\" then \"h10\" else r.destination_ipv6 }))\n\n  |> map(fn: (r) => ({ r with source_ipv6: if r.source_ipv6 == \"2001:0678:07f0:0000:0000:0000:0000:000a\" then \"h11\" else r.source_ipv6 }))\n  |> map(fn: (r) => ({ r with destination_ipv6: if r.destination_ipv6 == \"2001:0678:07f0:0000:0000:0000:0000:000a\" then \"h11\" else r.destination_ipv6 }))",
     "refId": "A"
    }
   ],
   "title": "Current Path Statistic from Host to Host",
   "transformations": [
    {
     "id": "organize",
     "options": {
      "excludeByName": {},
      "includeByName": {},
      "indexByName": {
       "destination_ipv6": 2,
       "path": 3,
       "source_ipv6": 1,
       "timestamp": 0
      },
      "renameByName": {
       "_time": "Timestamp",
       "destination_ipv6": "Destination Host",
       "path": "Path",
       "source_ipv6": "Source Host",
       "timestamp": "Timestamp"
      }
     }
    }
   ],
   "type": "table"
  },
  {
   "datasource": {
    "type": "influxdb",
    "uid": "P3C6603E967DC8568"
   },
   "fieldConfig": {
    "defaults": {
     "color": {
      "mode": "thresholds"
     },
     "custom": {
      "align": "auto",
      "cellOptions": {
       "type": "auto"
      },
      "filterable": true,
      "inspect": false
     },
     "mappings": [],
     "thresholds": {
      "mode": "absolute",
      "steps": [
       {
        "color": "green",
        "value": null
       },
       {
        "color": "red",
        "value": 80
       }
      ]
     }
    },
    "overrides": []
   },
   "gridPos": {
    "h": 9,
    "w": 12,
    "x": 12,
    "y": 8
   },
   "id": 1,
   "options": {
    "cellHeight": "sm",
    "footer": {
     "countRows": false,
     "fields": "",
     "reducer": [
      "sum"
     ],
     "show": false
    },
    "showHeader": true,
    "sortBy": []
   },
   "pluginVersion": "10.4.1",
   "targets": [
    {
     "datasource": {
      "type": "influxdb",
      "uid": "P3C6603E967DC8568"
     },
     "query": "from(bucket: \"raw_data_export\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"netflow\")\n  |> filter(fn: (r) => r[\"aggregator\"] == \"1\")\n  |> filter(fn: (r) => r[\"flags\"] == \"0\")\n  |> filter(fn: (r) => r[\"_field\"] == \"aggregate\")\n  |> group(columns: [\"node_01\", \"node_02\", \"node_03\", \"node_04\"])\n  |> map(fn: (r) => ({ r with path: r.node_01 + \"-\" + r.node_02 + \"-\" + r.node_03 + \"-\" + r.node_04}))\n  |> keep(columns: [\"_time\", \"path\", \"_value\"])\n  |> truncateTimeColumn(unit: 1s)\n  |> map(fn: (r) => ({ r with timestamp: r._time }))\n  |> group(columns: [\"path\"])\n  |> aggregateWindow(every: inf, fn: last)\n  |> drop(columns: [\"_time\", \"_start\", \"_stop\"])\n  |> filter(fn: (r) => r[\"_value\"] != 0)\n  |> group()",
     "refId": "A"
    }
   ],
   "title": "PEI Statistics",
   "transformations": [
    {
     "id": "organize",
     "options": {
      "excludeByName": {},
      "includeByName": {},
      "indexByName": {
       "_value": 2,
       "path": 1,
       "timestamp": 0
      },
      "renameByName": {
       "_time": "Timestamp",
       "_value": "PEI",
       "path": "Path",
       "timestamp": "Timestamp"
      }
     }
    }
   ],
   "type": "table"
  },
  {
   "datasource": {
    "type": "influxdb",
    "uid": "P3C6603E967DC8568"
   },
   "fieldConfig": {
    "defaults": {
     "color": {
      "mode": "palette-classic"
     },
     "custom": {
      "axisBorderShow": false,
      "axisCenteredZero": false,
      "axisColorMode": "text",
      "axisLabel": "",
      "axisPlacement": "auto",
      "barAlignment": 0,
      "drawStyle": "line",
      "fillOpacity": 0,
      "gradientMode": "none",
      "hideFrom": {
       "legend": false,
       "tooltip": false,
       "viz": false
      },
      "insertNulls": false,
      "lineInterpolation": "smooth",
      "lineWidth": 1,
      "pointSize": 5,
      "scaleDistribution": {
       "type": "linear"
      },
      "showPoints": "auto",
      "spanNulls": false,
      "stacking": {
       "group": "A",
       "mode": "none"
      },
      "thresholdsStyle": {
       "mode": "off"
      }
     },
     "mappings": [],
     "thresholds": {
      "mode": "absolute",
      "steps": [
       {
        "color": "green",
        "value": null
       },
       {
        "color": "red",
        "value": 80
       }
      ]
     }
    },
    "overrides": []
   },
   "gridPos": {
    "h": 14,
    "w": 24,
    "x": 0,
    "y": 17
   },
   "id": 3,
   "options": {
    "legend": {
     "calcs": [
      "lastNotNull",
      "min",
      "max",
      "mean"
     ],
     "displayMode": "table",
     "placement": "bottom",
     "showLegend": true,
     "sortBy": "Last *",
     "sortDesc": false
    },
    "tooltip": {
     "mode": "single",
     "sort": "none"
    }
   },
   "targets": [
    {
     "datasource": {
      "type": "influxdb",
      "uid": "P3C6603E967DC8568"
     },
     "query": "from(bucket: \"raw_data_export\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"netflow\")\n  |> filter(fn: (r) => r[\"aggregator\"] == \"1\")\n  |> filter(fn: (r) => r[\"flags\"] == \"0\")\n  |> filter(fn: (r) => r[\"_field\"] == \"aggregate\")\n  |> group(columns: [\"node_01\", \"node_02\", \"node_03\", \"node_04\"])\n  |> pivot(rowKey: [\"_time\", \"node_01\", \"node_02\", \"node_03\", \"node_04\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r.aggregate }))\n  |> drop(columns: [\"aggregate\"])\n  |> map(fn: (r) => ({ r with path: r.node_01 + \"-\" + r.node_02 + \"-\" + r.node_03 + \"-\" + r.node_04}))\n  |> group(columns: [\"path\"])\n  |> aggregateWindow(every: 5m, fn: mean)\n  |> filter(fn: (r) => r[\"_value\"] != 0)",
     "refId": "A"
    }
   ],
   "title": "Path Efficiency over Time",
   "type": "timeseries"
  }
 ],
 "refresh": "1m",
 "schemaVersion": 39,
 "tags": [],
 "templating": {
  "list": []
 },
 "time": {
  "from": "now-1h",
  "to": "now"
 },
 "timepicker": {},
 "timezone": "browser",
 "title": "Path Statistics",
 "uid": "cdls2b8jkt5a8a",
 "version": 1,
 "weekStart": ""
}